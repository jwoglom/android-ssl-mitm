#!/usr/bin/env -S docker-compose -p mitm -f

version: "3.5"

networks:
  mainnet:
    driver: bridge
    internal: false
    external: false

volumes:
  certs:
    driver: local

services:

  adb:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    working_dir: /home
    entrypoint:
    - bash
    - -exc
    command:
    - |
      trap 'echo exiting; kill $$(jobs -p); kill 0' HUP INT TERM # EXIT
      until test -e bundle.crt && adb connect host.docker.internal | grep -i connected; do
        sleep 1
      done
      date
      adb wait-for-any-device
      adb devices -l
      adb root
      until adb connect host.docker.internal | grep -i connected; do sleep 1; done
      adb wait-for-any-device
      adb remount -R
      adb shell rm -f /system/etc/security/cacerts/*.0 || true
      adb push *.0 /system/etc/security/cacerts/
      adb shell chmod 644 /system/etc/security/cacerts/*.0
      adb push *.crt /sdcard/
      #adb push root.crt  /data/misc/keystore/user_0/1000_CACERT_ca
      #adb push int.crt   /data/misc/keystore/user_0/1000_CACERT_int
      #adb push local.crt /data/misc/keystore/user_0/1000_USRCERT_crt
      #adb shell chown -vR keystore:keystore /data/misc/keystore/user_0/
      xargs -n1 -- adb install -r /mnt/*.apk
      adb reboot
      until adb connect host.docker.internal | grep -i connected; do sleep 1; done
      adb wait-for-any-device
      adb root
      until adb connect host.docker.internal | grep -i connected; do sleep 1; done
      adb wait-for-any-device
      adb logcat
      exit
    networks:
    - mainnet
    volumes:
    - certs:/home:ro
    - ./:/mnt:ro

  http:
    image: openresty/openresty:latest
    restart: on-failure
    working_dir: /home
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: "1"
    command:
    # - nginx-debug
    - openresty
    - -g
    - daemon off;
    networks:
    - mainnet
    dns:
    - 8.8.8.8
    - 1.1.1.1
    ports:
    -  80:80/tcp
    - 443:443/tcp
    volumes:
    - certs:/home:rw
    - ./cert.sh:/docker-entrypoint.d/99-cert.sh:ro
    - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    - ./issue.sh:/home/ssl/issue.sh:ro
    # - ./ssl:/home/ssl:rw # use this for mounting certs to host

  dns:
    image: coredns/coredns:latest
    restart: on-failure
    environment:
      ADDRESS: ${ADDRESS:-100.64.199.34}
    networks:
    - mainnet
    ports:
    - 53:53/udp
    - 53:53/tcp
    volumes:
    - ./Corefile:/Corefile:ro

# emulator -verbose -wipe-data -avd avdname -dns-server 100.64.199.34
